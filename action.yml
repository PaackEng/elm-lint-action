name: 'Elm Validate'
description: 'Runs Elm through elm-format and elm-review then compiles it'
elm-package:
    description: 'Is this a package instead of an app?'
    required: false
    default: false
elm-working-directory:
    description: 'Working directory of lint, review and compile steps'
    required: false
    default: '.'
extra-path:
    description: 'Extra paths to be linted'
    required: false
runs:
  using: "composite"
  steps:
     - name: Install dependencies
       run: yarn install
       shell: bash

     - name: Run linter
       working-directory: ${{ inputs.elm-working-directory }}
       run: npx elm-format --validate src ${{ inputs.extra-path }}
       shell: bash

     - name: Run elm-review
       working-directory: ${{ inputs.elm-working-directory }}
       run: npx elm-review --template PaackEng/elm-review-config src ${{ inputs.extra-path }}
       shell: bash

     - name: Validate code (app)
       if: inputs.elm-package == false
       working-directory: ${{ inputs.elm-working-directory }}
       run: npx elm make src/Main.elm --output /dev/null
       shell: bash

     - name: Validate code (package)
       if: inputs.elm-package == true
       working-directory: ${{ inputs.elm-working-directory }}
       run: npx elm make
       shell: bash
